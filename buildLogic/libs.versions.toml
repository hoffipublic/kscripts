# object BuildLogicGlobal in ROOT/buildLogic/src/main/kotlin via ROOT/buildLogic/src/main/kotlin/VersionCatalogExtensions.kt
# libs.versions.toml should by standard be in 'ROOT/gradle/' folder
[versions]
accompanist = "0.28.0"
android = "8.0.2"
androidGradlePlugin = "7.4.2"
androidx-activity-compose = "1.7.2"
androidx-appcompat = "1.6.1"
androidx-core-ktx = "1.10.1"
antlr = "4.13.0"
apache-poi = "5.2.3"
arrow = "1.2.1"
benasher44-uuid = "0.7.0"
clikt = "4.2.1"
exposed = "0.43.0"
gradle-versions-catalogUpdate = "0.8.1"
gradle-versions-filter = "0.1.16"
gradle-versions-plugin = "0.48.0"
h2 = "2.2.220"
hamcrest = "2.2"
# global
jdkVersion = "17"
jsoup = "1.16.1"
junit-jupiter = "5.9.3"
kermit = "2.0.2"
kodein = "7.20.1"
koin = "3.5.0"
kointest = "3.5.0"
koodies = "1.9.7"
kotest = "5.8.0"
kotest-extensions-koin = "1.2.0"
kotest-plugin = "0.4.10"
# global
kotlin = "1.9.20"
# global https://github.com/JetBrains/compose-jb/releases or experimental: https://maven.pkg.jetbrains.space/kotlin/p/wasm/experimental/org/jetbrains/compose/desktop/desktop-jvm/
kotlin-compose = "1.5.10-dev-wasm02"
# https://maven.pkg.jetbrains.space/public/p/compose/dev/org/jetbrains/compose/compiler/compiler/
kotlin-compose-compiler = "1.5.2.1-rc01"
# bleeding edge https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev/org/jetbrains/kotlin/kotlin-stdlib-wasm/
kotlin-compose-kotlin-stdlib-wasm = "1.9.20"
kotlin-compose-wasm = "1.5.10-dev-wasm02"
kotlin-logging = "5.1.0"
kotlinpoet = "1.14.2"
kotlinx-coroutines = "1.7.3"
kotlinx-datetime = "0.4.1"
kotlinx-serialization-json = "1.6.0"
kotlinx-serialization-kaml = "0.54.0"
kotlinx-serialization-ktoml = "0.5.0"
kotlinx-serialization-yamlkt = "0.13.0"
## https://kotlinlang.org/docs/wasm-libraries.html#supported-kotlin-libraries-for-kotlin-wasm
#wasm-compose = "1.4.0-dev-wasm09"
#wasm-coroutines = "1.7.0-RC-wasm0"
#wasm-kotlinx-datetime = "0.4.0-wasm0"
#wasm-kotlinx-serialization = "1.5.1-wasm0"
#wasm-ktor = "2.3.1-wasm0"
#wasm-skiko = "0.0.7.61-wasm03"
ktor = "2.3.1"
logback = "1.4.11"
# plugin
micronaut = "3.7.9"
moshi = "1.15.0"
okhttp = "4.11.0"
okio = "3.6.0"
postgres = "42.6.0"
rabbitmq-amqp-client = "5.17.0"
resilience4j = "2.0.2"
retrofit = "2.9.0"
# plugin
shadow = "8.1.1"
slf4j = "2.0.9"
snakeyaml = "2.0"
sqldelight = "2.0.0-alpha05"
sslcontext-kickstart = "8.0.0"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core-ktx" }
antlr = { module = "org.antlr:antlr4", version.ref = "antlr" }
apache-poi = { module = "org.apache.poi:poi", version.ref = "apache-poi" }
apache-poi-ooxml = { module = "org.apache.poi:poi-ooxml", version.ref = "apache-poi" }
arrow = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
benasher44-uuid = { module = "com.benasher44:uuid", version.ref = "benasher44-uuid" }
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "kotlin-compose" }
exposedCore = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposedDatetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
exposedJdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
gradle-versions-catalogUpdate = { module = "nl.littlerobots.vcu:plugin", version.ref = "gradle-versions-catalogUpdate" }
gradle-versions-filter = { module = "se.ascp.gradle:gradle-versions-filter", version.ref = "gradle-versions-filter" }
gradle-versions-plugin = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradle-versions-plugin" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
hamcrest = { module = "org.hamcrest:hamcrest-library", version.ref = "hamcrest" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kodein = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
kointest = { module = "io.insert-koin:koin-test", version.ref = "kointest" }
koodies = { module = "com.bkahlert.koodies:koodies", version.ref = "koodies" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-extensions-koin = { module = "io.kotest.extensions:kotest-extensions-koin", version.ref = "kotest-extensions-koin" }
kotest-framework-dataset = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlin-logging" }
kotlin-test-annotations = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-test-common = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
kotlinx-serialization-kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kotlinx-serialization-kaml" }
kotlinx-serialization-ktoml = { module = "com.akuleshov7:ktoml-core", version.ref = "kotlinx-serialization-ktoml" }
kotlinx-serialization-yamlkt = { module = "net.mamoe.yamlkt:yamlkt", version.ref = "kotlinx-serialization-yamlkt" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
moshi = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
rabbitmq-amqp-client = { module = "com.rabbitmq:amqp-client", version.ref = "rabbitmq-amqp-client" }
resilience4j-core = { module = "io.github.resilience4j:resilience4j-core", version.ref = "resilience4j" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
sqldelight-android-driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-gradle-plugin = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite-driver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sslcontext-kickstart = { module = "io.github.hakky54:sslcontext-kickstart", version.ref = "sslcontext-kickstart" }

[bundles]
testJunitKotestKoin = [
    "kointest",
    "kotest-assertions-core",
    "kotest-extensions-koin",
    "kotest-framework-dataset",
    "kotest-framework-engine",
]

[plugins]
android-application = { id = "com.android.application", version.ref = "android" }
android-library = { id = "com.android.library", version.ref = "android" }
micronaut-application = { id = "io.micronaut.application", version.ref = "micronaut" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
versions-catalogupdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "gradle-versions-catalogUpdate" }
versions-filter = { id = "se.ascp.gradle.gradle-versions-filter", version.ref = "gradle-versions-filter" }
versions-plugin = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions-plugin" }
